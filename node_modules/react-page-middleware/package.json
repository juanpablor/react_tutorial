{
  "name": "react-page-middleware",
  "version": "0.4.0",
  "description": "Connect middleware for rendering pages with React JavaScript Library.",
  "main": "src/index.js",
  "dependencies": {
    "node-terminal": "0.1.1",
    "async": "0.2.9",
    "es5-shim": "~2.1.0",
    "React": "git://github.com/facebook/react.git",
    "jstransform": "~3.0.0",
    "optimist": "0.6.0",
    "node-haste": "git://github.com/facebook/node-haste.git",
    "source-map": "~0.1.22",
    "convert-source-map": "0.2.6",
    "browser-builtins": "1.0.7"
  },
  "author": {
    "name": "Lee Byron",
    "email": "leebyron@fb.com",
    "url": "http://github.com/leebyron"
  },
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "http://github.com/facebook/react-page-middleware.git"
  },
  "readme": "- - -\n\n**_This project is not actively maintained. Proceed at your own risk!_**\n\n- - -\n\nreact-page-middleware\n===============================================\nMiddleware for building full page apps using React, JSX, and CommonJS.\n\nIf you want to get started with server rendered React apps, go directly to\n[react-page](http://www.github.com/facebook/react-page/). This project is the\n  implementation of the router/server-side-page-assembler/packager.\n\n\n###Features\n\n  - Server-side JavaScript rendering of pages/apps using React.\n  - Pages rendered on server, seamlessly brought to life in the browser.\n  - No special glue code to write - \"Just works\" on client/server.\n  - CommonJS + React + optional JSX.\n\n<br>\n\n###Requirements\n\n    - node (a more recent version)\n    - npm\n\n###Install\n\n> Let npm do all the installing - just create a directory structure anywhere as\n> follows:\n\n    yourProject/\n     ├── package.json              # Add npm dependencies here.\n     ├── server.js                 # Start web server with `node server.js`\n     └── src                       # All your application JS.\n         ├── index.js              # localhost:8080/index.html routed here\n         └── pages                 # Configure the page root using pageRouteRoot\n             └── about.js          # localhost:8080/about.html\n\n> List your dependencies in `package.json`:\n\n    // Shows how to depend on bleeding edge versions. One niceness of\n    // `react-page-middleware`, is depending on the main React repo as\n    // `require('React')` Not all JS packagers understand the pure git repo for\n    // React.\n    \"dependencies\": {\n      \"React\": \"git://github.com/facebook/react.git\",\n      \"react-page-middleware\": \"git://github.com/facebook/react-page-middleware.git\",\n      \"connect\": \"2.8.3\"\n    },\n\n> Download your project's dependencies:\n\n    cd yourProject\n    npm install\n\n\n> Create a `server.js` file that requires `react-page-middleware`, and set the\n> proper directory search paths and routing paths.\n\n    var reactMiddleware = require('react-page-middleware');\n    var REACT_LOCATION = __dirname + '/node_modules/react-tools/src';\n    var ROOT_DIR = __dirname;\n    var app = connect()\n      .use(reactMiddleware.provide({\n        logTiming: true,\n        pageRouteRoot: ROOT_DIR,           // URLs based in this directory\n        useSourceMaps: true,                // Generate client source maps.\n        projectRoot: ROOT_DIR,          // Search for sources from\n        ignorePaths: function(p) {          // Additional filtering\n          return p.indexOf('__tests__') !== -1;\n        }\n      }))\n      .use(connect['static'](__dirname + '/src/static_files'));\n    http.createServer(app).listen(8080);\n\n\n> Run the server and open index.html:\n\n\n   node server\n   open http://localhost:8080/index.html\n\n\n> The [react-page](http://www.github.com/facebook/react-page/) project has a\n> much more thorough explanation of the motivation and features.\n\n\n### JavaScript-centric Routing And Page Rendering For JavaScript.\n\nThe default router is JavaScript-centric. You simply specify the path to the JS\ncomponent you want to use to render the entire page.\n[react-page](http://www.github.com/facebook/react-page/) for more information\nabout the routing.\n\n### Source Maps\n\n`react-page-middleware` has them.\n\n\n### Run and Build on the Fly\n\n>  Just hit your browser's refresh button to run an always-up-to-date version of\n>  your app.\n\n- Dynamically packages/compiles your app on each server request.\n\n### Purpose\n\n`react-page-middleware` is a rapid development environment where you can experiment with\nentirely new ways of building production web apps powered by React. It provides\na common environment that allows sharing of modules client/server architecture\nprototypes.\n\nIn order to use this technology in a production environment, you would need to\naudit and verify that the server rendering strategy is safe and suitable for\nyour purposes.\n\n- In particular, you would want to ensure that a proper server\nsandbox is enforced. However, `react-page` _does_ run your UI rendering code\ninside of contextify as a preliminary sandbox.\n\n- The packaging/transforming features of `react-page` would not be needed in a\nproduction environment where the packages can be prebuilt once, stored in a CDN\nand not be repackaged on the fly, but the server rendering feature is very\ncompelling for production environments where page load performance is of great\nconcern.\n\n- Among other things, additional connect middleware should be added to prevent\nstack traces from showing up in the client.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/facebook/react-page-middleware/issues"
  },
  "homepage": "https://github.com/facebook/react-page-middleware",
  "_id": "react-page-middleware@0.4.0",
  "_shasum": "3aa4ce6f430bb90c20dfd1acd4e4b569516fd7d4",
  "_resolved": "git://github.com/reactjs/react-page-middleware.git#e12df3677b6e71e545293c5acc8e9326065325ba",
  "_from": "react-page-middleware@git://github.com/reactjs/react-page-middleware.git"
}
